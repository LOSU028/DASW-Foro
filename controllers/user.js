"use strict";

function generateUUID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
        let r = Math.random() * 16 | 0;
        let v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}

class UserException{
    constructor(errorMessage){
        this.errorMessage = errorMessage;
    }
}

class User{
    constructor(email,username,age, password){
        this._id = generateUUID();
        this.email = email;
        this.username = username;
        this.age = age;
        this.password = password;
    }

    //setters
    set id(value){
        throw new UserException("User ids are autogenerated");
    }

    set email(value){
        if(typeof value !== 'string' || value === ''){
            throw new UserException("User email cannot be empty or not a string");
        }
        this._email = value;
    }

    set username(value){
        if(typeof value !== 'string' || value === ''){
            throw new UserException("Username cannot be empty or not a string")
        }
        this._username = value;
    }

    set age(value){
        if(typeof value !== 'number' || value === undefined){
            throw new UserException("User age cannot be empty or not a number")
        }
        this._age = value;
    }

    set password(value){
        if(typeof value !== 'string' || value === ''){
            throw new UserException("Password cannot be empty or not a string")
        }
        this._password = value;
    }

    //getters
    get id(){
        return this._id
    }

    get email(){
        return this._email
    }

    get username(){
        return this._username
    }

    get age(){
        return this._age
    }

    get password(){
        return this._password
    }
}

module.exports = User;